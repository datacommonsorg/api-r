% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/popobs.R
\name{GetPopulations}
\alias{GetPopulations}
\title{Return StatisticalPopulations associated with specified dcids}
\usage{
GetPopulations(dcids, populationType, constraintsPVMap)
}
\arguments{
\item{dcids}{required, dcid(s) identifying Places of populations to query
for. The returned StatisticalPopulations must have location
\url{https://browser.datacommons.org/kg?dcid=location} as one of
these specified dcids.
This parameter will accept a vector of strings, or a single column
tibble/data frame of strings. To select a single column from multicol
tibble/data frame, use \code{select(df, col)}.}

\item{populationType}{required, string identifying the
population type of the StatisticalPopulation.}

\item{constraintsPVMap}{required, named list mapping constraining properties
to the desired values that defines the returned StatisticalPopulations
should be constrained by. Example:
\code{list(employment = 'BLS_Employed')}}
}
\value{
If dcids input is a vector of strings, returns a named
  list mapping a given dcid to the unique StatisticalPopulation
  located at the dcid as specified by the populationType and
  constrainingProperties, if such a StatisticalPopulation exists.
  A given dcid will NOT be a member of the dict if such a
  StatisticalPopulation does not exist.

  If dcids input is a tibble/data frame, returns a new single column
  tibble, where the i-th entry corresponds to the StatisticalPopulation
  located at the given dcid specified by the populationType and
  constrainingProperties, if such exists. Otherwise, the cell is empty.
}
\description{
Returns a mapping between the each given Place and the
  StatisticalPopulation satisfying all specified constraints
  contained in the Place.
}
\examples{
# Set the dcid to be that of Santa Clara County.
sccDcid <- 'geoId/06085'
# Get the population dcids for Santa Clara County.
malePops <- GetPopulations(sccDcid, 'Person', list(gender = 'Male'))
femalePops <- GetPopulations(sccDcid, 'Person', list(gender = 'Female'))

# Create an atomic vector of the dcids of California, Kentucky and Maryland.
stateDcids <- c('geoId/06', 'geoId/21', 'geoId/24')
# Get the population dcids for each state.
malePops <- GetPopulations(stateDcids, 'Person', list(gender = 'Male'))
femalePops <- GetPopulations(stateDcids, 'Person', list(gender = 'Female'))

# Create an tibble of the dcids of California, Kentucky, and Maryland.
df <- tibble(countyDcid = c('geoId/06', 'geoId/21', 'geoId/24'),
             rand = c(1, 2, 3))
# Get the population dcids for each state.
df$malePops <- GetPopulations(select(df, countyDcid), 'Person',
                              list(gender = 'Male'))
df$femalePops <- GetPopulations(select(df, countyDcid), 'Person',
                                list(gender = 'Female'))
}
