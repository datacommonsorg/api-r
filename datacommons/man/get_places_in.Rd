% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/places.R
\name{get_places_in}
\alias{get_places_in}
\title{Return places of a specified type contained in specified places}
\usage{
get_places_in(dcids, place_type)
}
\arguments{
\item{dcids}{required, dcid(s) identifying a containing place.
This parameter will accept a vector of strings
or a single-column tibble/data frame of strings.
To select a single column, use \code{select(df, col)}.}

\item{place_type}{required, string identifying the place type to filter results
by.}
}
\value{
If dcids input is vector of strings, will return a named
  list mapping each dcid to places contained in it of the given place_type.

  If \code{dcids} input is tibble/data frame, will return a new
  single-column tibble/data frame where the i-th entry of the output
  corresponds to places contained in the place identified by the dcid in
  i-th cell of the \code{dcids} input. The cells of output column will
  always contain a vector of place dcids of the given place_type.
}
\description{
Returns a mapping between the specified places
  and the places of a specified type contained in them.
}
\details{
Assigning output to a tibble/data frame will yield a list of contained
places. To convert this to 1-to-1 mapping (the containing place will
be repeated), use \code{tidyr::unnest}.
}
\examples{
# Atomic vector of the dcids of Santa Clara and Montgomery County.
countyDcids <- c('geoId/06085', 'geoId/24031')
# Get towns in Santa Clara and Montgomery County.
towns <- get_places_in(countyDcids, 'Town')

# Tibble of the dcids of Santa Clara and Montgomery County.
df <- tibble(countyDcid = c('geoId/06085', 'geoId/24031'))
# Get towns in Santa Clara and Montgomery County.
df$townDcid <- get_places_in(df, 'Town')
# Since get_places_in returned a mapping between counties and
# a list of towns, use you can use tidyr::unnest to create
# a 1-1 mapping between each county and its towns.
}
